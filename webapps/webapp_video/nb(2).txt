- сделать страницу (в дальнейшем динам. приложение) для отображения "music video"
дизайн (youtube, yandex video....)

 основная часть - блок проигрывателя или отображение клипа в фрейме
<iframe width="1024" height="768" src="http://youtube.com/embed/" frameborder="0" allowfullscreen></iframe>
<iframe width="1024" height="768" src="//ok.ru/videoembed/" frameborder="0" allowfullscreen></iframe>
<iframe width="1024" height="768" src="http://rutube.ru/play/embed/" frameborder="0" allowfullscreen></iframe>

боковая панель - список видеоклипов в виде плейлиста (или плитка из изображений-скриншотов с названиями )
панель с блоком тегов - алфавитные и тематические теги, по дате

рассмотреть интерфейсы
- youtube
- yandex video
- twitter
============
https://www.youtube.com/html5
youtube, ответы на часто задаваемые вопросы о видео HTML5.

--------
*- добавить аккордеон для вывода видео
- добавить виджет календаря для выборки видео по дате создания
- сделать начальное тестирование браузера на поддержку видеостандартов

- сделать возможность использование в приложении иерархических списков: 
	- список видео связанных одной темой 
	(видеоуроки, видео муз. группы и проч.
	видео одного жанра, формата)
	- отобразить иерархию как в БД, так и в шаблонах

- при начальном запуске приложения отображать 10 видео из раздела Избранное,
или 10 видео добавленных последними

- сделать проигрывание видео в разных форматах с локального сервера

=========================== HTML,CSS
- сделать вариант верстки с карточками видео, где находится заголовок и иконка
- сделать вариант верстки, где для перехода от заголовка видео к отображению
полной информации используется модальное окно
- добавить строку навигации

=========================== XML
- создать отдельный XML с настройками блоков и проч.
(блок footer - содержимое, оформление)

=========================== ИМПОРТ, ЭКСПОРТ
- сделать скрипт импорта из БД Друпал в XML
- необходимо конвертировать данные массивов, полученных после  SQL запросов по правилам
соответсвия полей ( 

	
	*node.type -->									video->type

	*field_producer_value	-->	video->creators
	*field_roles_value	-->	video->roles
	*field_creators_value	-->	video->creators
	
	*field_data_body.body_value --> 				video->description
	*node.status --> 								video->public_status
	*node.created -->								video->published
	*node.changed -->								video->updated
	
	*field_title_value (delta=0,1)-->	video->title[]

	field_img_cover_value --> video->pictures (delta!)
	field_url_value --> 		video->links (delta!)
	
...
)
- полученный массив данных вставить в XML, который формируется на основе шаблона, где места
вставки данных обозначены кодами, названия которых совпадают с наименованием полей в 
сконвертированном массиве данных.
перебор массива и вставку в шаблон значений полей организовать в цикле

- включить в XML данные таксономии (список тегов и иерархические подшивки)

--------- SQL test (double records)
SELECT 
node.nid, 
taxonomy_index.tid,
taxonomy_term_data.name,
-- node.vid, 
node.title, 
node.type, 
node.created, 
node.changed, 
node.status,
field_data_field_title.field_title_value,
field_data_field_title.delta,
field_data_field_producer.field_producer_value,
field_data_field_roles.field_roles_value,
field_data_field_img_cover.field_img_cover_value,
field_data_field_url.field_url_value,
field_data_body.body_value
FROM node
LEFT JOIN taxonomy_index ON taxonomy_index.nid=node.nid
LEFT JOIN taxonomy_term_data ON taxonomy_term_data.tid=taxonomy_index.tid
LEFT JOIN field_data_body ON field_data_body.entity_id=node.nid
LEFT JOIN field_data_field_title ON field_data_field_title.entity_id=node.nid
LEFT JOIN field_data_field_producer ON field_data_field_producer.entity_id=node.nid
LEFT JOIN field_data_field_roles ON field_data_field_roles.entity_id=node.nid
LEFT JOIN field_data_field_img_cover ON field_data_field_img_cover.entity_id=node.nid
LEFT JOIN field_data_field_url ON field_data_field_url.entity_id=node.nid
WHERE 
node.status=1 AND 
node.type='video' AND 
node.title LIKE ('%Бельвилля%');

------ one record
SELECT 
node.nid, 
node.title, 
node.type, 
node.created, 
node.changed, 
node.status,
field_data_field_producer.field_producer_value,
field_data_field_roles.field_roles_value,
field_data_body.body_value
FROM node
LEFT JOIN field_data_field_producer ON field_data_field_producer.entity_id=node.nid
LEFT JOIN field_data_field_roles ON field_data_field_roles.entity_id=node.nid
LEFT JOIN field_data_body ON field_data_body.entity_id=node.nid
WHERE 
node.status=1 AND 
node.type='video';
-- AND node.title LIKE ('%Бельвилля%');

SELECT 
node.nid, 
node.title, 
field_data_field_creators.field_creators_value,
node.type, 
node.created, 
node.changed, 
node.status,
field_data_body.body_value
FROM node
LEFT JOIN field_data_field_creators ON field_data_field_creators.entity_id=node.nid
LEFT JOIN field_data_body ON field_data_body.entity_id=node.nid
WHERE 
node.status=1 AND 
node.type='videoclip' 
-- AND node.title LIKE ('%Life%');


------ get title (video->title_ru, video->title_en)
SELECT 
field_data_field_title.field_title_value,
-- field_data_field_title.delta
FROM node
LEFT JOIN field_data_field_title ON field_data_field_title.entity_id=node.nid
-- WHERE 
-- node.nid=745;

------ get pictures (video->pictures->img, video->pictures->poster)
SELECT 
field_data_field_img_cover.field_img_cover_value
FROM node
LEFT JOIN field_data_field_img_cover ON field_data_field_img_cover.entity_id=node.nid
WHERE 
node.nid=745;
1283

------ get links (video->links)
SELECT 
field_data_field_url.field_url_value
FROM node
LEFT JOIN field_data_field_url ON field_data_field_url.entity_id=node.nid
WHERE 
node.nid=745;
1283

------ get tags (video->tags)
SELECT 
taxonomy_index.tid,
-- taxonomy_term_data.name
FROM node
LEFT JOIN taxonomy_index ON taxonomy_index.nid=node.nid
-- LEFT JOIN taxonomy_term_data ON taxonomy_term_data.tid=taxonomy_index.tid
WHERE 
node.nid=745;
1283

