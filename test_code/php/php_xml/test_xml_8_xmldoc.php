<?php
// Массив, в котором будут сохранены новости из XML файла
$news = array();

// Читаем содержимое XML файла в строковую переменную
$xml = join('',file('news2.xml'));
//echo $xml;
// Создаем дерево DOM XML на основе имеющегося у нас XML файла.
// Заметьте, что это заняло у нас всего лишь одну строчку кода!
$xml = xmldoc($xml);

// Теперь в переменной $xml у нас находится дерево объектов,
// представляющее собой наш XML файл. Для того, чтобы начать
// обход этого дерева - необходимо получить объект родительской node (тега).
// Для нашего XML файла это будет node <newsList>
$root = $xml->root();
// Получаем массив потомков родительской node (в нашем случае это
// массив <news>)
$nodes = $root->children();
// Начинаем обработку каждой node в массиве
foreach($nodes as $node)
{
// Если текущая node - это одна из node <news>, то продолжаем ее обработку,
// чтобы получить информацию об этой новости
    if ($node->name=='news')
    {
// Создаем новый массив, куда будем собирать иинформацию о текущей новости
        $currentNews = array();
// Получаем дату этой новости (она хранится в аттрибуте 'date')
        $currentNews['date'] = $node->get_attribute('date');
// Остальная информация хранится во вложенных node <title> и <text>,
// поэтому мы должны взять список вложенных nodes и обработать его.
        $content = $node->children();
        foreach($content as $contentNode)
        {
// Проверяем: если node, которую мы сейчас обрабатываем, является тегом
// (т.е. имеет тип XML_ELEMENT_NODE) и ее имя - одно из тех, которые мы
// ищем - добавляем информацию из этой node в массив с информацией о новости
            if (($contentNode->type==XML_ELEMENT_NODE) &&
                (in_array($contentNode->name,array('title','text'))))
                $currentNews[$contentNode->name] = $contentNode->content;
        };
// Сохраняем текущую новость в массиве новостей
        $news[] = $currentNews;
    };
};

print_r($news);

echo "end";
?>

