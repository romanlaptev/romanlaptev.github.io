<?php
/**
 * Implementation of hook_node_info().
 */


function gallery_images_init()
{
	//drupal_set_message("function gallery_images_init !!!");
}

function gallery_images_form_alter(&$form, $form_state, $form_id)
{
	//drupal_set_message("function gallery_images_form_alter !!!");
}

function gallery_images_menu ()
{
    $items = array();
    $items['gallery_images'] = array(
    'title' => 'upload and resize gallery images',	//Заголовок страницы
    'page callback' => 'drupal_get_form',// создание формы
    'page arguments' => array('gallery_images_form'),//Содержимое формы
    'access arguments' => array('access content')
    );
//-------------------------------------------
/*
    $items['update_price/unpublic_product'] = array(
        'title' => 'снятие товаров каталога с публикации',
	'description'     => 'Update price service',
        'page callback' => 'update_price_unpublic_product',
	'access callback' => TRUE,
    );
*/
//-------------------------------------------
    return $items;
}//================= end function

function gallery_images_form($form_state)
{
//--------------------------------
	$form['upload']['upload_fieldset'] = array(
		'#type' => 'fieldset',
		//'#title' => t('Обновление данных о товарах и ценах'),
		//'#description' => t('<strong>Upload a image file</strong>'),
		'#collapsible' => TRUE,
		'#collapsed' => false,
	);

	$form['#attributes'] = array('enctype' => "multipart/form-data");
	$form['upload']['upload_fieldset']['file_upload'] = array(
		'#type' => 'file',
		'#title' => t('Upload a file'),
		'#size' => '60',
	);
	$form['upload']['upload_fieldset']['file_upload_button'] = array(
		'#type' => 'submit',
		'#value' => t('Upload file'),
		'#submit' => array('gallery_images_submit_upload_file'),
	);

	$form['upload']['upload_fieldset']['replace'] = array(
				'#type' => 'select',
				'#title' => t('if already exists file, then.... '),
				'#options' => array(
					FILE_EXISTS_RENAME => t('Appends number until name is unique'),
					FILE_EXISTS_REPLACE => t('Replace the existing file'),
					FILE_EXISTS_ERROR => t('Fail with an error'),
					),
				'#default_value' => FILE_EXISTS_REPLACE,
				);
	$form['upload']['upload_fieldset']['file_subdir'] = array(
				'#type' => 'textfield',
				'#title' => t('Subdirectory for upload file'),
				//'#default_value' => 'sites/default/files/gallery_images',
				'#default_value' => '/mnt/disk3/temp',
				);
/*
	$form['upload']['upload_fieldset']['extensions'] = array(
				'#type' => 'textfield',
				'#title' => t('Allowed extensions.'),
				'#default_value' => 'jpg',
				);
*/
	$form['upload']['upload_fieldset']['allow_all_extensions'] = array(
				'#type' => 'checkbox',
				'#title' => t('Allow all extensions?'),
				'#default_value' => FALSE,
				);
/*
	$form['upload']['upload_fieldset']['is_image_file'] = array(
				'#type' => 'checkbox',
				'#title' => t('Is this an image file?'),
				'#default_value' => TRUE,
				);
*/
	return $form;
}
//=======================================
//
//=======================================
function gallery_images_process()
{
	drupal_set_message("function gallery_images_process.");
}//================= end function


function gallery_images_submit_upload_file($form, &$form_state) 
{
//drupal_set_message("function gallery_images_submit_upload_file");
//echo "<pre>";
//print_r($form['upload']['upload_fieldset']);
//echo "</pre>";


//	if (!empty($form['upload']['upload_fieldset']['file_upload']['#value'])) 
//	{
		$validators = array(
			//'file_validate_extensions' => array('xls', 'xlsx'),
		);

//drupal_set_message($form['upload']['upload_fieldset']['allow_all_extensions']['#value']);
		if ($form['upload']['upload_fieldset']['allow_all_extensions']['#value']==0) 
		{
			$validators['file_validate_is_image'] = array();
		}

		if (!empty($form['upload']['upload_fieldset']['file_subdir']['#value'])) 
		{
//drupal_set_message($form['upload']['upload_fieldset']['file_subdir']['#value']);
			$dir = $form['upload']['upload_fieldset']['file_subdir']['#value'];
		}
		else 
		{
			$dir = file_directory_path() . '/gallery_images';
		}
//drupal_set_message("dir = ".$dir);

//drupal_set_message("replace = ".$form['upload']['upload_fieldset']['replace']['#value']);
		//$replace = FILE_EXISTS_REPLACE;
		$replace = $form['upload']['upload_fieldset']['replace']['#value'];
//drupal_set_message("replace = ".$replace);

/*
		if (file_check_directory($dir, 1)) 
		 {
			$file = file_save_upload('file_upload', $validators, $dir, $replace);
			file_set_status($file, FILE_STATUS_PERMANENT);
			$form_state['values']['fid'] = $file->fid;
		} 
		else 
		{
			drupal_set_message("error, file_save_upload");
			drupal_set_message(t('Can\'t acces directory'));		
		}

		if ($file) 
		{
			drupal_set_message(t('New file %name uploaded to %path.', array('%name' => $file->filename, '%path' => $file->filepath)));
		} 
		else 
		{
			drupal_set_message(t('File was not uploaded'));
		}
*/
		upload_img("1","2");		
//	}
//	else
//	{
//		drupal_set_message('Error, need upload file');
//	}


//echo "<pre>";
//print_r($file);
//echo "</pre>";

}//================= end function


function upload_img($file_path, $file_arr)
{
	drupal_set_message('function upload_img');
return;
//echo "<pre>";
//print_r($file_arr);
//echo "</pre>";

        $perms=substr(sprintf('%o', fileperms($file_path)), -4);
        if (is_writable ($file_path))
          {
        //echo "upload folder ".$file_path.", is_writable, ($perms)";
                //echo "<br>";
                if(isset($file_arr))
                  {
                        $errors ="";
                        switch ($file_arr['error'])
                        {
                                case 0:
// UPLOAD_ERR_OK, Ошибок не возникло, файл был успешно загружен на сервер.
                                        if (is_uploaded_file($file_arr['tmp_name']))
                                        {
                                                if (move_uploaded_file($file_arr['tmp_name'], $file_path.$file_arr['name']))
                                                {
                                                        //echo $file_path.$file_arr['name'].", size= ".$file_arr['size']." bytes upload successful<br>";
                                                }
                                                /*
                                                else
                                                {
                                                        echo "<br>".$file_arr['name']."<font color=red><b> не загружен.<b></font><br>";
                                                }
                                                */
                                        }
                                break;

                                case 1:
                                        $error = $file_arr['error'];
$errors .= 'Ошибка UPLOAD_ERR_INI_SIZE, Размер принятого файла превысил максимально допустимый размер, который задан директивой upload_max_filesize конфигурационного файла php.ini.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 2:
                                        $error = $file_arr['error'];
                                        $errors .= 'Ошибка UPLOAD_ERR_FORM_SIZE,  Размер загружаемого файла превысил значение MAX_FILE_SIZE, указанное в HTML-форме.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 3:
                                        $error = $file_arr['error'];
                                        $errors .= 'Ошибка UPLOAD_ERR_PARTIAL, Загружаемый файл был получен только частично.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 4:
                                        $error = $file_arr['error'];
                                        $errors .= 'Ошибка UPLOAD_ERR_NO_FILE,  Файл не был загружен.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 6:
                                        $error = $file_arr['error'];
                                        $errors .= 'Ошибка UPLOAD_ERR_NO_TMP_DIR, Отсутствует временная папка. Добавлено в PHP 4.3.10 и PHP 5.0.3.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 7:
                                        $error = $file_arr['error'];
                                        $errors .= 'Ошибка UPLOAD_ERR_CANT_WRITE, Не удалось записать файл на диск. Добавлено в PHP 5.1.0.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                                case 8:
                                        $error = $file_arr['error'];
$errors .= 'Ошибка UPLOAD_ERR_EXTENSION, PHP-расширение остановило загрузку файла. PHP не предоставляет способа определить какое расширение остановило загрузку файла; в этом может помочь просмотр списка загруженных расширений из phpinfo(). Добавлено в PHP 5.2.0.';
                                        $errors .= ' Код ошибки: ' . $error;
                                break;

                        }//------------------------ end switch
                        if (!empty($errors))
                          {
                                echo "<font color=red>".$errors."</font>";
                                echo "<br>";
                          }
                  }
          }
        else
          {
        echo "<br><font color=red>Error. upload folder ".$file_path.",(".$perms.") no is_writable</font><br>";
                echo "<br>";
          }//------------------------ end if

}//---------------------------- end function
?>
