t1
============================== ИСПРАВИТЬ
- в браузере на Android некорректно работает сохранение bookmarks_json в БД webSQL
выяснить причину и при возникновении ошибки записи  переключать на другой тип хранилища (localStorage)

==============================
- добавить использование кэширование (Service Worker + Cache)
при запросе ресурсов (css, js, json, html...) идет обращение к кэшу, затем,

+сравниваются заголовки Last-Modified для кэшированного ресурса и его оригинала на сервере.
Если серверный Last-Modified позже  кэшированного, то происходит запрос GET на сервер и
полученные данные заменяют старую копию из кэша...
при сравнении заголовков на сервер делается аякс-запрос HEAD для получения одних заголовков....
....также, если сервер не поддерживает запрос HEAD, можно использовать варианты:
- запрос небольшого одноименного с ресурсом файла, например bookmarks.date
- запрос файла LastModified.json, где содержится информация о каждом ресурсе
- для запроса ресурсов использовать обращение не напрямую к ресурсу, а к серверному скрипту (get_content.php, aspx...),
который отдает или дату модификации, или контент файла.....в зависимость от get-параметров


- для браузеров не подерживающих SW+Cache * организовать кэширование с помощью indexedDB, LocalStorage....

при загрузке на хостинг дата bookmarks.json может меняться и возникает ситуация, когда обновление не происходит,
т.к. серверная дата bookmarks.json не требует обновления (например 2019-06-06), а
содержание bookmarks.json относится к ранней дате (например 2019-06-03)

поэтому, сделать не автом. загрузку файла с новой датой, а только сообщение в логе о появлении новой версии.
....проверка даты файла происходит так же, с помощью HEAD запроса при начальной загрузке приложения

- сделать несколько асинхронных методов с использованием Promise.
для браузеров без поддержки Promise использовать jQuery.deferred объект

============================================
*- добавить хлебные крошки
*- сделать индикатор аякс-загрузки
*- сделать возможность смены источника путем выбора для парсинга другого файла (локальный или сетевой)

- возможность загрузки на сервер нового bookmarks.json

- ссылки храняться в БД на хостинге и считываются через API,  
если хостинг недоступен отображаются ссылки из файла в каталоге приложения (db/bookmarks.json)
- при хранении ссылок в БД возможно редактирование через API
- становится доступна возможность импорта/экспорта в различные форматы (CSV, XML, JSON)

- сделать заметную кнопку НАЗАД с возвратом на предпоследний контейнер ссылок
+ исправить верстку кнопок контейнеров, сделать кликабельнй всю кнопку (где разместить описание контейнера, ниже кнопки?)

- доработать функции перевода даты из timestamp в строковую дату:
*добавить ноли к значениям месяца, даты, если они из одного символа ( 6 -> 06)
отдельный перевод для даты загруженного локального файла, не нужно делить на 1000, как при опеределении даты bookmarks.json

- ссылки на контейнеры не открываются в новой вкладке тк. нет парсинга URL после загрузки приложения.
Только по клику...ИСПРАВИТЬ
http://vbox5/sites/romanlaptev.github.io/projects/bookmarks/bookmarks2.html#?q=view-container&id=6251

+- сделать панель breadcrumbs независимой от контейнера и фиксированной
*- сделать загрузку иконок для ссылок (iconuri)
*- сделать обработку ошибки загрузки iconuri
*- дату создания, изменения поместить в <a href title=""
*- проверить кол-во строк в описании ссылок
- добавить работу с метками
- подобрать шрифты

*- написать тесты методов приложения

- добавить тесты браузера, не пройдя тесты приложение не запускается
скрывать кнопки выбора локального файла, если нет поддержки window.FileList


*- ИСПРАВИТЬ,     Меню закладок / sites, затем thor_sites, и строка выглядит как Меню закладок / thor_sites
всегда пропадает второй уровень при переходе на третий!!!!!!!!!!!!!!!!!!!!
проблема с bookmarks.json экспортированным из Windows FF
для исправления необходимо исправить ключи массива webApp.vars["breadcrumbs"] на "key_" + container.id

*-------------------------------- сделать версию приложения с использованим ReactJS
- измерить время загрузки/парсинга в старой и новой версии, с использованием ReactJS и без

App, приложение - компонент первого уровня
	- ajax-запрос данных из bookmarks.json
	- парсинг JSON данных
	- первоначальный вызов компонентов отображения контейнеров и ссылок (Container и Link)
	- включает обработчики клика на #btn-scroll-to-top

Container, контейнер ссылок - дочерний компонент
	- включает обработчики клика на контейнер (рендеринг его содержимого)
	
Link, ссылка - компонент последнего уровеня
	- формирование и вывод кода разметки для ссылки
	
Breadcrumbs, строка навигации
	- формирование и вывод кода разметки (ссылки) для текущего контейнера
	- обработка кликов на ссылки контейнеров

? urlManager, компонент для обработки внутренних переходов (клики на контейнеры и кнопки, ссылки breadcrumbs)
возможно, нет необходимости в отдельном компоненте

Modal, компонент для вывода модального окна с кнопками выбора источника данных
	- вывод окна #serviceModal
	- включает обработчики клика на кнопки #btn-parse, #user-data-file, #btn-clear

Log, компонент работы с сообщениями лога
	- включает обработчик клика кнопку #clear-log
	
данные хранятся отдельным компонентом......? 
или в компоненте приложения....?
Redux?

- подключить UI компонент (ant-design, blueprint...)